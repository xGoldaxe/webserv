SRCS	=	srcs/main.cpp \
			srcs/exit_handle.cpp \
			srcs/utils/file.cpp \
			srcs/utils/string.cpp \
			srcs/init/server.cpp \
			srcs/utils/utils.cpp \
			srcs/init/connection.cpp \
			srcs/init/exception_server_not_listening.cpp \
			srcs/class/request.cpp \
			srcs/class/request_constructor.cpp \
			srcs/class/response.cpp \
			srcs/class/route.cpp \
			srcs/configuration/redirection.cpp \
			srcs/configuration/webserv.cpp \
			srcs/configuration/server.cpp \
			srcs/http_header/Date.cpp \
			srcs/http_header/Server.cpp \
			srcs/http_header/Data-length.cpp \
			srcs/http_header/Content-Type.cpp \
			srcs/internal/mime_types.cpp \
			srcs/cgi/cgi_manager.cpp \
			srcs/errors/http_code.cpp \
			srcs/class/response_error_page.cpp \
			srcs/class/read_chunk.cpp \

HEADERS =	srcs/errors/http_code.hpp \
			srcs/exit_handle.hpp \
			srcs/init/exception_server_not_listening.hpp \
			srcs/init/server.hpp \
			srcs/http_header/http_header.hpp \
			srcs/webserv.hpp \
			srcs/class/request.hpp \
			srcs/class/response.hpp \
			srcs/class/route.hpp \
			srcs/configuration/webserv.hpp \
			srcs/configuration/server.hpp \
			srcs/cgi/cgi_manager.hpp \
			srcs/internal/mime_types.hpp \
			srcs/utils/file.hpp \
			srcs/utils/string.hpp \


NEW_SRCS =	$(addprefix .build/, $(notdir $(SRCS) ) )

OB 	= ${NEW_SRCS:%.cpp=%.o}

OBJS	=	${SRCS:%.cpp=%.o}

DEPS	=	${HEADERS:%.hpp=srcs/%.hpp}

NAME	=	tester

CPPFLAGS	=	-Wall -Wextra -Werror -I. -std=c++98 -D DEBUG

RM		=	rm -rf

CXX		=	c++

# COLORS
NONE			= \033[0m
CL_LINE			= \033[2K
B_RED			= \033[1;31m
B_GREEN			= \033[1;32m
B_MAGENTA 		= \033[1;35m
B_CYAN 			= \033[1;36m

%.o : %.cpp 
		@$(CXX) ${CPPFLAGS} -I. -o .build/$(notdir $@) -c $? 
		@printf "${B_MAGENTA}Compilling $? ...\n${NONE}"

all:	
		@bash create_symbolic.sh "$(SRCS) $(HEADERS)"
		@make ${NAME} --no-print-directory


${NAME}:	${OB}
		@${CXX} ${CPPFLAGS} ${OB} -o ${NAME} 
		@printf "${B_GREEN}==>{${NAME}} LINKED SUCCESFULLY<==${NONE}\n"

clean:
		@${RM}
		@${RM} ./.build
		@printf "${B_RED}XX clean XX\n${NONE}"

fclean:	clean
		@${RM} ${NAME}
		@printf "${B_RED}XX fclean XX\n${NONE}"

re:		fclean all

.PHONY:	all clean fclean re ${NAME}
